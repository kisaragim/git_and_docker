MIME-Version: 1.0
Content-Type: multipart/mixed; boundary=y0GDDSw8xZhNPCezjxQyh9m73inMe1WalwNKUt
StorageVersion: v1

--y0GDDSw8xZhNPCezjxQyh9m73inMe1WalwNKUt

<?xml version='1.0' encoding='UTF-8'?><ResultsList path="/BugDetective/fileLeaks.c"><VersionInfos><StorageInfo ownerId="com.parasoft.xtest.checkers.api.execution" resultId="IExecutionViolation" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.execution" resultId="InsureViolation" ver="3"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.scope" resultId="IScopeProjectInfo" ver="3"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IMetricsViolation" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IDupCodeViolation" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IMetricEstimationInfo" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IFlowAnalysisViolation" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="ICodingStandardsViolation" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.generation" resultId="IGenerationInfo" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.generation" resultId="IGenerationProjectInfo" ver="2"/></VersionInfos></ResultsList>
--y0GDDSw8xZhNPCezjxQyh9m73inMe1WalwNKUt

<?xml version='1.0' encoding='UTF-8'?><ResultInfo resultId="IFlowAnalysisViolation" ownerId="com.parasoft.xtest.checkers.api.standards" violKeys="5_/BugDetective/fileLeaks.c;4_/BugDetective/fileLeaks.c"><FlowViol msg="File not closed: file" ln="49" ruleSAFMsg="Point where opened file is lost" auth="root" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where file is opened" tool="c++test" id="603044296" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="49" locStartPos="0" locEndLn="50" locEndPos="0" locFile="/BugDetective/fileLeaks.c" FirstElSrcRngStartln="49" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="50" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/BugDetective/fileLeaks.c"><Props><Prop key="Tracked variables" val="Opened file"/></Props><ElDescList><ElDesc srcRngStartln="40" srcRngStartPos="0" srcRngEndLn="41" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="40" ElType="." desc="int ARRSIZE = 3;" rngLn="40"><Props/></ElDesc><ElDesc srcRngStartln="46" srcRngStartPos="0" srcRngEndLn="47" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="46" ElType="." desc="int i;" rngLn="46"><Props/></ElDesc><ElDesc srcRngStartln="47" srcRngStartPos="0" srcRngEndLn="48" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="47" ElType="." desc="FILE *file = NULL;" rngLn="47"><Props/></ElDesc><ElDesc srcRngStartln="48" srcRngStartPos="0" srcRngEndLn="49" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="48" ElType="." desc="for (i = 0; i &lt; ARRSIZE; ++i) {" rngLn="48"><Props/><Anns><Ann msg="Loop condition evaluation: (i &lt; ARRSIZE) (true)" kind="condEval"/><Ann msg="Entering the loop" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="49" srcRngStartPos="0" srcRngEndLn="50" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="49" ElType=".C" desc="file = fopen(names[i], &quot;r&quot;);" rngLn="49"><Props><Prop key="Tracked variables" val="file"/></Props><Anns><Ann msg="Point where file is opened" kind="cause"/><Ann msg="Opened file: file" kind="var"/></Anns></ElDesc><ElDesc srcRngStartln="50" srcRngStartPos="0" srcRngEndLn="51" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="50" ElType="." desc="if(file==NULL) {" rngLn="50"><Props/><Anns><Ann msg="Condition evaluation: (file == 0) (assuming false)" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="54" srcRngStartPos="0" srcRngEndLn="55" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="54" ElType="." desc="printFile(file);" rngLn="54"><ElDescList><ElDesc srcRngStartln="11" srcRngStartPos="0" srcRngEndLn="12" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="11" ElType="." desc="char c;" rngLn="11"><Props><Prop key="Tracked variables" val="file"/></Props><Anns><Ann msg="Opened file: file" kind="var"/></Anns></ElDesc><ElDesc srcRngStartln="12" srcRngStartPos="0" srcRngEndLn="13" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="12" ElType="." desc="printf(&quot;Reading file contents:\n\n&quot;);" rngLn="12"><Props/></ElDesc><ElDesc srcRngStartln="13" srcRngStartPos="0" srcRngEndLn="14" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="13" ElType="." desc="while(1) {" rngLn="13"><Props/><Anns><Ann msg="Loop condition evaluation: 1 (true)" kind="condEval"/><Ann msg="Entering the loop" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="14" srcRngStartPos="0" srcRngEndLn="15" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="14" ElType="." desc="c = fgetc(file);" rngLn="14"><Props/></ElDesc><ElDesc srcRngStartln="15" srcRngStartPos="0" srcRngEndLn="16" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="15" ElType="." desc="if (c!=EOF) {" rngLn="15"><Props/><Anns><Ann msg="Condition evaluation: (c != -1) (assuming false)" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="18" srcRngStartPos="0" srcRngEndLn="19" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="18" ElType="." desc="break;" rngLn="18"><Props/><Anns><Ann msg="Exit the loop" kind="condEval"/></Anns></ElDesc></ElDescList><Props/></ElDesc><ElDesc srcRngStartln="48" srcRngStartPos="0" srcRngEndLn="49" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="48" ElType="." desc="for (i = 0; i &lt; ARRSIZE; ++i) {" rngLn="48"><Props/><Anns><Ann msg="Loop condition evaluation: (i &lt; ARRSIZE) (assuming true)" kind="condEval"/><Ann msg="Entering the loop" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="49" srcRngStartPos="0" srcRngEndLn="50" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="49" ElType=".P" desc="file = fopen(names[i], &quot;r&quot;);" rngLn="49"><Props><Prop key="Tracked variables" val="file"/></Props><Anns><Ann msg="Opened file: file" kind="var"/><Ann msg="Point where opened file is lost" kind="point"/></Anns></ElDesc></ElDescList></FlowViol><FlowViol msg="File not closed: file" ln="36" ruleSAFMsg="Point where opened file is lost" auth="root" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where file is opened" tool="c++test" id="1573681103" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="36" locStartPos="0" locEndLn="37" locEndPos="0" locFile="/BugDetective/fileLeaks.c" FirstElSrcRngStartln="26" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="27" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/BugDetective/fileLeaks.c"><Props><Prop key="Tracked variables" val="Opened file"/></Props><ElDescList><ElDesc srcRngStartln="25" srcRngStartPos="0" srcRngEndLn="26" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="25" ElType="." desc="FILE *file;" rngLn="25"><Props/></ElDesc><ElDesc srcRngStartln="26" srcRngStartPos="0" srcRngEndLn="27" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="26" ElType=".C" desc="file = fopen(&quot;myfile.txt&quot;, &quot;r&quot;);" rngLn="26"><Props><Prop key="Tracked variables" val="file"/></Props><Anns><Ann msg="Point where file is opened" kind="cause"/><Ann msg="Opened file: file" kind="var"/></Anns></ElDesc><ElDesc srcRngStartln="27" srcRngStartPos="0" srcRngEndLn="28" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="27" ElType="." desc="if (file==NULL) {" rngLn="27"><Props/><Anns><Ann msg="Condition evaluation: (file == 0) (assuming false)" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="31" srcRngStartPos="0" srcRngEndLn="32" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="31" ElType="." desc="printf(&quot;File successfully opened.\n\n&quot;);" rngLn="31"><Props/></ElDesc><ElDesc srcRngStartln="32" srcRngStartPos="0" srcRngEndLn="33" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="32" ElType="." desc="printFile(file);" rngLn="32"><ElDescList><ElDesc srcRngStartln="11" srcRngStartPos="0" srcRngEndLn="12" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="11" ElType="." desc="char c;" rngLn="11"><Props><Prop key="Tracked variables" val="file"/></Props><Anns><Ann msg="Opened file: file" kind="var"/></Anns></ElDesc><ElDesc srcRngStartln="12" srcRngStartPos="0" srcRngEndLn="13" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="12" ElType="." desc="printf(&quot;Reading file contents:\n\n&quot;);" rngLn="12"><Props/></ElDesc><ElDesc srcRngStartln="13" srcRngStartPos="0" srcRngEndLn="14" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="13" ElType="." desc="while(1) {" rngLn="13"><Props/><Anns><Ann msg="Loop condition evaluation: 1 (true)" kind="condEval"/><Ann msg="Entering the loop" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="14" srcRngStartPos="0" srcRngEndLn="15" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="14" ElType="." desc="c = fgetc(file);" rngLn="14"><Props/></ElDesc><ElDesc srcRngStartln="15" srcRngStartPos="0" srcRngEndLn="16" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="15" ElType="." desc="if (c!=EOF) {" rngLn="15"><Props/><Anns><Ann msg="Condition evaluation: (c != -1) (assuming false)" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="18" srcRngStartPos="0" srcRngEndLn="19" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="18" ElType="." desc="break;" rngLn="18"><Props/><Anns><Ann msg="Exit the loop" kind="condEval"/></Anns></ElDesc></ElDescList><Props/></ElDesc><ElDesc srcRngStartln="35" srcRngStartPos="0" srcRngEndLn="36" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="35" ElType="." desc="return 0;" rngLn="35"><Props/></ElDesc><ElDesc srcRngStartln="36" srcRngStartPos="0" srcRngEndLn="37" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="36" ElType=".P" desc="}" rngLn="36"><Props><Prop key="Tracked variables" val="file"/></Props><Anns><Ann msg="Opened file: file" kind="var"/><Ann msg="Point where opened file is lost" kind="point"/></Anns></ElDesc></ElDescList></FlowViol></ResultInfo>
--y0GDDSw8xZhNPCezjxQyh9m73inMe1WalwNKUt--
