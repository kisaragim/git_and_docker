MIME-Version: 1.0
Content-Type: multipart/mixed; boundary=0oQ7MTjHQQaFrUoVRAqet0wFfJJigNAEwVnwM
StorageVersion: v1

--0oQ7MTjHQQaFrUoVRAqet0wFfJJigNAEwVnwM

<?xml version='1.0' encoding='UTF-8'?><ResultsList path="/BugDetective/unreachableCode.c"><VersionInfos><StorageInfo ownerId="com.parasoft.xtest.checkers.api.execution" resultId="IExecutionViolation" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.execution" resultId="InsureViolation" ver="3"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.scope" resultId="IScopeProjectInfo" ver="3"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IMetricsViolation" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IDupCodeViolation" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IMetricEstimationInfo" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IFlowAnalysisViolation" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="ICodingStandardsViolation" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.generation" resultId="IGenerationInfo" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.generation" resultId="IGenerationProjectInfo" ver="2"/></VersionInfos></ResultsList>
--0oQ7MTjHQQaFrUoVRAqet0wFfJJigNAEwVnwM

<?xml version='1.0' encoding='UTF-8'?><ResultInfo resultId="IFlowAnalysisViolation" ownerId="com.parasoft.xtest.checkers.api.standards" violKeys="39_/BugDetective/unreachableCode.c;41_/BugDetective/unreachableCode.c;43_/BugDetective/unreachableCode.c;40_/BugDetective/unreachableCode.c;42_/BugDetective/unreachableCode.c;44_/BugDetective/unreachableCode.c"><FlowViol msg="Condition &quot;!volumetric&quot; always evaluates to true" ln="16" ruleSAFMsg="Point where senseless condition is used" auth="root" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-527458111" lang="cpp" locType="sr" config="1" hash="1398926183" locStartln="16" locStartPos="0" locEndLn="17" locEndPos="0" locFile="/BugDetective/unreachableCode.c" FirstElSrcRngStartln="11" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="12" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/BugDetective/unreachableCode.c"><Props/><ElDescList><ElDesc srcRngStartln="11" srcRngStartPos="0" srcRngEndLn="12" srcRngEndPos="0" srcRngFile="/BugDetective/unreachableCode.c" srcRnghash="1398926183" ln="11" ElType=".C" desc="static void guessFigure(int round, int volumetric)" rngLn="11"><Props/><Anns><Ann msg="Start of the path" kind="cause"/></Anns></ElDesc><ElDesc srcRngStartln="13" srcRngStartPos="0" srcRngEndLn="14" srcRngEndPos="0" srcRngFile="/BugDetective/unreachableCode.c" srcRnghash="1398926183" ln="13" ElType="." desc="int figure;" rngLn="13"><Props/></ElDesc><ElDesc srcRngStartln="14" srcRngStartPos="0" srcRngEndLn="15" srcRngEndPos="0" srcRngFile="/BugDetective/unreachableCode.c" srcRnghash="1398926183" ln="14" ElType="!" desc="if (round &amp;&amp; volumetric) {" rngLn="14"><Props/><Anns><Ann msg="Condition evaluation: (round != 0) (assuming true)" kind="condEval"/><Ann msg="Condition evaluation: (volumetric != 0) (assuming false)" kind="condEval"/><Ann msg="Condition evaluation: round &amp;&amp; volumetric (false)" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="16" srcRngStartPos="0" srcRngEndLn="17" srcRngEndPos="0" srcRngFile="/BugDetective/unreachableCode.c" srcRnghash="1398926183" ln="16" ElType=".P" desc="} else if (round &amp;&amp; !volumetric) {" rngLn="16"><Props/><Anns><Ann msg="Condition evaluation: (round != 0) (true)" kind="condEval"/><Ann msg="Point where senseless condition is used" kind="point"/></Anns></ElDesc></ElDescList></FlowViol><FlowViol msg="Condition &quot;(*cur >= 'a') &amp;&amp; (*cur &lt;= 'f')&quot; always evaluates to false" ln="51" ruleSAFMsg="Point where senseless condition is used" auth="root" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1451351576" lang="cpp" locType="sr" config="1" hash="1398926183" locStartln="51" locStartPos="0" locEndLn="52" locEndPos="0" locFile="/BugDetective/unreachableCode.c" FirstElSrcRngStartln="44" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="45" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/BugDetective/unreachableCode.c"><Props/><ElDescList><ElDesc srcRngStartln="44" srcRngStartPos="0" srcRngEndLn="45" srcRngEndPos="0" srcRngFile="/BugDetective/unreachableCode.c" srcRnghash="1398926183" ln="44" ElType=".C" desc="static void checkRange(char* cur)" rngLn="44"><Props/><Anns><Ann msg="Start of the path" kind="cause"/></Anns></ElDesc><ElDesc srcRngStartln="46" srcRngStartPos="0" srcRngEndLn="47" srcRngEndPos="0" srcRngFile="/BugDetective/unreachableCode.c" srcRnghash="1398926183" ln="46" ElType="." desc="if ((*cur &lt; '0') || (*cur > '9')) {" rngLn="46"><Props/><Anns><Ann msg="Condition evaluation: (*cur &lt; 48) (assuming false)" kind="condEval"/><Ann msg="Condition evaluation: (*cur > 57) (assuming false)" kind="condEval"/><Ann msg="Condition evaluation: (*cur &lt; '0') || (*cur > '9') (false)" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="51" srcRngStartPos="0" srcRngEndLn="52" srcRngEndPos="0" srcRngFile="/BugDetective/unreachableCode.c" srcRnghash="1398926183" ln="51" ElType=".P" desc="if ((*cur >= 'a') &amp;&amp; (*cur &lt;= 'f')) {" rngLn="51"><Props/><Anns><Ann msg="Condition evaluation: (*cur >= 97) (false)" kind="condEval"/><Ann msg="Point where senseless condition is used" kind="point"/></Anns></ElDesc></ElDescList></FlowViol><FlowViol msg="&quot;cur&quot; is checked for null after being dereferenced" ln="63" ruleSAFMsg="Point of checking for nullity" auth="root" sev="2" rule="BD-PB-DEREF" ruleSCSCMsg="Point of dereferencing" tool="c++test" id="-1480975621" lang="cpp" locType="sr" config="1" hash="1398926183" locStartln="63" locStartPos="0" locEndLn="64" locEndPos="0" locFile="/BugDetective/unreachableCode.c" FirstElSrcRngStartln="58" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="59" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/BugDetective/unreachableCode.c"><Props><Prop key="Tracked variables" val="Important values"/></Props><ElDescList><ElDesc srcRngStartln="58" srcRngStartPos="0" srcRngEndLn="59" srcRngEndPos="0" srcRngFile="/BugDetective/unreachableCode.c" srcRnghash="1398926183" ln="58" ElType=".C" desc="if (cur[0] == '-') {" rngLn="58"><Props><Prop key="Tracked variables" val="cur != null"/></Props><Anns><Ann msg="Point of dereferencing" kind="cause"/><Ann msg="Important values: cur != null" kind="var"/><Ann msg="Condition evaluation: (cur[0] == 45) (assuming false)" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="63" srcRngStartPos="0" srcRngEndLn="64" srcRngEndPos="0" srcRngFile="/BugDetective/unreachableCode.c" srcRnghash="1398926183" ln="63" ElType=".P" desc="if (cur == 0) {" rngLn="63"><Props><Prop key="Tracked variables" val="cur != null"/></Props><Anns><Ann msg="Important values: cur != null" kind="var"/><Ann msg="Point of checking for nullity" kind="point"/></Anns></ElDesc></ElDescList></FlowViol><FlowViol msg="Condition &quot;!round&quot; always evaluates to true" ln="18" ruleSAFMsg="Point where senseless condition is used" auth="root" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1630626668" lang="cpp" locType="sr" config="1" hash="1398926183" locStartln="18" locStartPos="0" locEndLn="19" locEndPos="0" locFile="/BugDetective/unreachableCode.c" FirstElSrcRngStartln="11" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="12" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/BugDetective/unreachableCode.c"><Props/><ElDescList><ElDesc srcRngStartln="11" srcRngStartPos="0" srcRngEndLn="12" srcRngEndPos="0" srcRngFile="/BugDetective/unreachableCode.c" srcRnghash="1398926183" ln="11" ElType=".C" desc="static void guessFigure(int round, int volumetric)" rngLn="11"><Props/><Anns><Ann msg="Start of the path" kind="cause"/></Anns></ElDesc><ElDesc srcRngStartln="13" srcRngStartPos="0" srcRngEndLn="14" srcRngEndPos="0" srcRngFile="/BugDetective/unreachableCode.c" srcRnghash="1398926183" ln="13" ElType="." desc="int figure;" rngLn="13"><Props/></ElDesc><ElDesc srcRngStartln="14" srcRngStartPos="0" srcRngEndLn="15" srcRngEndPos="0" srcRngFile="/BugDetective/unreachableCode.c" srcRnghash="1398926183" ln="14" ElType="!" desc="if (round &amp;&amp; volumetric) {" rngLn="14"><Props/><Anns><Ann msg="Condition evaluation: (round != 0) (assuming false)" kind="condEval"/><Ann msg="Condition evaluation: round &amp;&amp; volumetric (false)" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="16" srcRngStartPos="0" srcRngEndLn="17" srcRngEndPos="0" srcRngFile="/BugDetective/unreachableCode.c" srcRnghash="1398926183" ln="16" ElType="." desc="} else if (round &amp;&amp; !volumetric) {" rngLn="16"><Props/><Anns><Ann msg="Condition evaluation: (round != 0) (false)" kind="condEval"/><Ann msg="Condition evaluation: round &amp;&amp; !volumetric (false)" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="18" srcRngStartPos="0" srcRngEndLn="19" srcRngEndPos="0" srcRngFile="/BugDetective/unreachableCode.c" srcRnghash="1398926183" ln="18" ElType=".P" desc="} else if (!round &amp;&amp; volumetric) {" rngLn="18"><Props/><Anns><Ann msg="Point where senseless condition is used" kind="point"/></Anns></ElDesc></ElDescList></FlowViol><FlowViol msg="Condition &quot;(int)*cur >= 97&quot; always evaluates to false" ln="51" ruleSAFMsg="Point where senseless condition is used" auth="root" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-589878461" lang="cpp" locType="sr" config="1" hash="1398926183" locStartln="51" locStartPos="0" locEndLn="52" locEndPos="0" locFile="/BugDetective/unreachableCode.c" FirstElSrcRngStartln="44" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="45" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/BugDetective/unreachableCode.c"><Props/><ElDescList><ElDesc srcRngStartln="44" srcRngStartPos="0" srcRngEndLn="45" srcRngEndPos="0" srcRngFile="/BugDetective/unreachableCode.c" srcRnghash="1398926183" ln="44" ElType=".C" desc="static void checkRange(char* cur)" rngLn="44"><Props/><Anns><Ann msg="Start of the path" kind="cause"/></Anns></ElDesc><ElDesc srcRngStartln="46" srcRngStartPos="0" srcRngEndLn="47" srcRngEndPos="0" srcRngFile="/BugDetective/unreachableCode.c" srcRnghash="1398926183" ln="46" ElType="." desc="if ((*cur &lt; '0') || (*cur > '9')) {" rngLn="46"><Props/><Anns><Ann msg="Condition evaluation: (*cur &lt; 48) (assuming false)" kind="condEval"/><Ann msg="Condition evaluation: (*cur > 57) (assuming false)" kind="condEval"/><Ann msg="Condition evaluation: (*cur &lt; '0') || (*cur > '9') (false)" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="51" srcRngStartPos="0" srcRngEndLn="52" srcRngEndPos="0" srcRngFile="/BugDetective/unreachableCode.c" srcRnghash="1398926183" ln="51" ElType=".P" desc="if ((*cur >= 'a') &amp;&amp; (*cur &lt;= 'f')) {" rngLn="51"><Props/><Anns><Ann msg="Point where senseless condition is used" kind="point"/></Anns></ElDesc></ElDescList></FlowViol><FlowViol msg="Condition &quot;cur == 0&quot; always evaluates to false" ln="63" ruleSAFMsg="Point where senseless condition is used" auth="root" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1056502269" lang="cpp" locType="sr" config="1" hash="1398926183" locStartln="63" locStartPos="0" locEndLn="64" locEndPos="0" locFile="/BugDetective/unreachableCode.c" FirstElSrcRngStartln="56" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="57" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/BugDetective/unreachableCode.c"><Props/><ElDescList><ElDesc srcRngStartln="56" srcRngStartPos="0" srcRngEndLn="57" srcRngEndPos="0" srcRngFile="/BugDetective/unreachableCode.c" srcRnghash="1398926183" ln="56" ElType=".C" desc="static void checkSequence(char cur[])" rngLn="56"><Props/><Anns><Ann msg="Start of the path" kind="cause"/></Anns></ElDesc><ElDesc srcRngStartln="58" srcRngStartPos="0" srcRngEndLn="59" srcRngEndPos="0" srcRngFile="/BugDetective/unreachableCode.c" srcRnghash="1398926183" ln="58" ElType="." desc="if (cur[0] == '-') {" rngLn="58"><Props/><Anns><Ann msg="Condition evaluation: (cur[0] == 45) (assuming false)" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="63" srcRngStartPos="0" srcRngEndLn="64" srcRngEndPos="0" srcRngFile="/BugDetective/unreachableCode.c" srcRnghash="1398926183" ln="63" ElType=".P" desc="if (cur == 0) {" rngLn="63"><Props/><Anns><Ann msg="Point where senseless condition is used" kind="point"/></Anns></ElDesc></ElDescList></FlowViol></ResultInfo>
--0oQ7MTjHQQaFrUoVRAqet0wFfJJigNAEwVnwM--
